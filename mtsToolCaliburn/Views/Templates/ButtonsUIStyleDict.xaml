<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:mtsToolCaliburn.Views.Templates"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <Style  x:Key="btn-gradient-primary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#da8cff" Offset="0"></GradientStop>
                                <GradientStop Color="#9a55ff" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-secondary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#e7ebf0" Offset="0"></GradientStop>
                                <GradientStop Color="#868e96" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-success" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#84d9d2" Offset="0"></GradientStop>
                                <GradientStop Color="#07cdae" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-danger" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#ffbf96" Offset="0"></GradientStop>
                                <GradientStop Color="#fe7096" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style  x:Key="btn-gradient-warning" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#f6e384" Offset="0"></GradientStop>
                                <GradientStop Color="#ffd500" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style  x:Key="btn-gradient-info" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#90caf9" Offset="0"></GradientStop>
                                <GradientStop Color="#047edf " Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-light" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#f4f4f4" Offset="0"></GradientStop>
                                <GradientStop Color="#e4e4e9" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#000000" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-dark" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#5e7188" Offset="0"></GradientStop>
                                <GradientStop Color="#3e4b5b" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-primary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#da8cff" Offset="0"></GradientStop>
                                <GradientStop Color="#9a55ff" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-secondary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#e7ebf0" Offset="0"></GradientStop>
                                <GradientStop Color="#868e96" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-success" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#84d9d2" Offset="0"></GradientStop>
                                <GradientStop Color="#07cdae" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-danger" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#ffbf96" Offset="0"></GradientStop>
                                <GradientStop Color="#fe7096" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-warning" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#f6e384" Offset="0"></GradientStop>
                                <GradientStop Color="#ffd500" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style  x:Key="btn-gradient-rounded-info" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#90caf9" Offset="0"></GradientStop>
                                <GradientStop Color="#047edf " Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-light" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#f4f4f4" Offset="0"></GradientStop>
                                <GradientStop Color="#e4e4e9" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#000000" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-gradient-rounded-dark" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="21" BorderThickness="1" Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"   >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#5e7188" Offset="0"></GradientStop>
                                <GradientStop Color="#3e4b5b" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="1"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="0.8" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-primary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}">
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#b66dff"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#b66dff"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#da8cff" Offset="0"></GradientStop>
                                                    <GradientStop Color="#9a55ff" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style  x:Key="btn-outline-secondary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#c3bdbd"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#c3bdbd"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#e7ebf0" Offset="0"></GradientStop>
                                                    <GradientStop Color="#868e96" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-success" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#1bcfb4"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#1bcfb4"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#84d9d2" Offset="0"></GradientStop>
                                                    <GradientStop Color="#07cdae" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-danger" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}">
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#fe7c96"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#fe7c96"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#ffbf96" Offset="0"></GradientStop>
                                                    <GradientStop Color="#fe7096" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-warning" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#fed713"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#fed713"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#f6e384" Offset="0"></GradientStop>
                                                    <GradientStop Color="#ffd500" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-info" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#198ae3"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Setter Property="TextElement.Foreground" Value="#198ae3"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#90caf9" Offset="0"></GradientStop>
                                                    <GradientStop Color="#047edf " Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="TextElement.Foreground" Value="#000000"></Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-light" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.Foreground="#000000"  TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#f8f9fa"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#f4f4f4" Offset="0"></GradientStop>
                                                    <GradientStop Color="#e4e4e9" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-outline-dark" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.Foreground="#000000"  TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="#3e4b5b"></Setter>
                                <Setter Property="Border.Background" Value="#ffffff"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" >
                                            <Setter.Value>
                                                <LinearGradientBrush>
                                                    <GradientStop Color="#5e7188" Offset="0"></GradientStop>
                                                    <GradientStop Color="#3e4b5b" Offset="1"></GradientStop>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Border.BorderBrush" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-primary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#b66dff" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#9a55ff" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-secondary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" Background="#c3bdbd"  BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Opacity" Value="0.8" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Opacity" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-success" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#84d9d2" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#07cdae" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-danger" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#ffbf96" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#fe7096" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-warning" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#f6e384" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#ffd500" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-info" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#90caf9" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#047edf" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-light" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#000000" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#f4f4f4" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#e4e4e9" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-dark" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5" BorderThickness="1"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.Foreground="#ffffff" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="#5e7188" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="#3e4b5b" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-primary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#b66dff" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#b66dff"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#b66dff"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-secondary" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#c3bdbd" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#c3bdbd"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#c3bdbd"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-success" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#1bcfb4" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#1bcfb4"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#1bcfb4"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-danger" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#fe7c96" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#fe7c96"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#fe7c96"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-warning" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#fed713" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#fed713"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#fed713"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-info" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#198ae3" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#198ae3"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#198ae3"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-light" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#000000" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#f8f9fa"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#f8f9fa"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="btn-inverse-dark" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius="5"     Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}"  >
                        <ContentPresenter TextElement.FontSize="14px" TextElement.FontFamily="ubuntu-bold" TextElement.FontWeight="DemiBold"  HorizontalAlignment="Center"  Margin="3" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <Border.Style>
                            <Style>
                                <Setter Property="TextElement.Foreground" Value="#3e4b5b" />
                                <Setter Property ="Border.Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2"  Color="#3e4b5b"   ></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="TextElement.Foreground" Value="#ffffff" />
                                        <Setter Property ="Border.Background" >
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="1"  Color="#3e4b5b"   ></SolidColorBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>